/* NerveNet ver.0.1.0  (c) 2013 Meathill  MIT
 build at 2013-09-29 11:09:52*/ 
!function(a){function b(a){return"[object Function]"===j.call(a)}function c(a){return a===Object(a)}function d(a){return"[object String]"===j.call(a)}function e(a){for(var b=i.call(arguments,1),c=0,d=b.length;d>c;c++){var e=b[c];for(var f in e)a[f]=e[f]}return a}function f(b,c){if(!b)return!1;var d=b.split("."),c=c||a;c=c[d[0]];for(var e=1,f=d.length;f>e;e++){if(!(d[e]in c))return!1;c=c[d[e]]}return c}function g(a){return l.dir+"/"+a.split(".").join("/")+".js"}function h(a,b){b=b||"";var c=document.createElement("script");c.className="nervenet "+b,c.innerHTML=a,v?u.insertBefore(c,v):u.appendChild(c)}if(!a.Nervenet){var i=Array.prototype.slice,j=Object.prototype.toString,k={};a.Nervenet={VERSION:"0.1.0",createContext:function(){return new m},createNameSpace:function(b,c){var d=b.split("."),c=c||a;k[b]=c;for(var e=0,f=d.length;f>e;e++)c[d[e]]=c[d[e]]||{},c=c[d[e]];return c},parseNamespace:f,setConfig:function(a,b){a in l&&(l[a]=b)}};var l={dir:"js",injectPrefix:"$"},m=function(){this.mappings={},this.eventMap={},this.valueMap={},this.config=e({},l),this.mapValue("context",this)},n=function(a,b){this.klass=a,this.instance=b},o={NOT_A_CLASS:"[Error Nervenet.context.mapClass] the second parameter is invalid, a class is expected",SOMETHING_EXIST:"[Error Nerver.context.mapClass/mapSingleton/mapValue] the mapping already exist"};m.prototype={createInstance:function(a){for(var b=i.call(arguments,1),e=0,f=b.length;f>e;e++)c(b[e])&&this.inject(b[e]);a=d(a)?this.getClass(a):a;var g=Object.create(a.prototype);return a.apply(g,b),this.inject(g),g},getClass:function(a){return this.mappings[a].klass},getSingleton:function(a){if(!(a in this.mappings))throw new Error("no such class");return this.mappings[a].instance||(this.mappings[a].instance=this.createInstance(a)),this.mappings[a].instance},getValue:function(a){return this.valueMap[a]},hasMapping:function(a){return a in this.mappings},hasValue:function(a){return a in this.valueMap},inject:function(a){var c="$"===this.config.injectPrefix?"\\$":this.config.injectPrefix,e=new RegExp("^"+c+"([\\w\\-]+)$"),g=new RegExp("^{{"+c+"([\\w\\-]+)}}$");for(var h in a){var j=a[h];if(d(j)&&j.length>0){if(g.test(j)){var k=j.match(g)[1];a[h]=this.getValue(k)||k in this.mappings&&this.getSingleton(k);continue}var l=f(j);if(l){if(b(l)){var m=!1;for(var k in this.mappings)if(this.getClass(k)===l){this.getSingleton(k)?a[h]=this.getSingleton(k):(a[h]=this.createInstance(k),this.mapSingleton(k,a[h])),m=!0;break}m||(a[h]=this.createInstance(l),this.mapSingleton(j,l,a[h]))}else this.mapValue(j,l),a[h]=l;continue}}if(e.test(h)){var k=h.match(e)[1];k in this.valueMap?a[h]=this.getValue(k):k in this.mappings&&(a[h]=this.getSingleton(k))}}if(a.postConstruct&&b(a.postConstruct)){var n=i.call(arguments,1);a.postConstruct.apply(a,n)}return this},mapClass:function(a,c){if(!b(c))throw new Error(o.NOT_A_CLASS);if(this.hasMapping(a))throw new Error(o.SOMETHING_EXIST);return this.mappings[a]=new n(c),this},mapEvent:function(a,b,c){this.eventMap[a]=this.eventMap.event||[],this.eventMap[a].push({command:b,context:c})},mapSingleton:function(a,c,d){if(this.hasMapping(a))throw new Error(o.SOMETHING_EXIST);return d&&(this.mappings[a]=new n(c,d)),this.mappings[a]=b(c)?new n(c):new n(null,c),this},mapValue:function(a,b){if(this.hasValue(a))throw new Error(o.SOMETHING_EXIST);return this.valueMap[a]=b,this},removeMapping:function(a){this.mappings[a]=null,delete this.mappings[a]},removeValue:function(a){this.valueMap[a]=null,delete this.valueMap[a]},start:function(a){x.start(a,this)},trigger:function(a){var b=Array.prototype.slice.call(arguments,1),c=this.eventMap[a];b.push(this);for(var d=0,e=c.length;e>d;d++){var f=c[d];f.command.apply(f.context,b)}}};var p=/(import|extend) ((\w+\.)+(\w+))/gi,q=-1,r=[],s=[],t={},u=document.getElementsByTagName("head")[0]||document.documentElement,v=u.getElementsByTagName("base")[0],w=new XMLHttpRequest;w.onload=function(){r[q].content=this.response,x.parse(this.response),x.loadNext()};var x={createNodes:function(){for(var a=0,b=s.length;b>a;a++){for(var c=0;b>c&&r[c].fullname!==s[a];c++);h(r[c].content,r[c].className),r.splice(c,1)}"func"in t&&t.func.call(t.context)},loadNext:function(){return q++,q>=r.length?(this.createNodes(),void 0):(w.open("get",g(r[q].fullname)),w.send(),void 0)},parse:function(a){b(a)&&(a=a.toString());var c=a.match(p);if(c)for(var d=0,e=c.length;e>d;d++){var f=c[d].slice(7);if(-1===s.indexOf(f)){var g={fullname:f,className:f.slice(f.lastIndexOf(".")+1),type:c[d].substr(0,6),content:""};if(r.push(g),"import"===g.type)s.push(f);else{for(var h=r[q].fullname,i=0;s[i]!==h;)i++;s.splice(i,0,f)}}}},reset:function(){s=[],r=[]},start:function(a,b){this.reset(),t={func:a,context:b},this.parse(a),this.loadNext()}}}}(this);
//# sourceMappingURL=Nervenet.min.map