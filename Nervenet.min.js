/* NerveNet ver.0.1.0  (c) 2013 Meathill  MIT
 build at 2013-08-28 10:08:15*/ 
!function(a){function b(a){return"[object Function]"===i.call(a)}function c(a){return"[object String]"===i.call(a)}function d(a){for(var b=h.call(arguments,1),c=0,d=b.length;d>c;c++){var e=b[c];for(var f in e)a[f]=e[f]}return a}function e(b){if(!b)return!1;for(var c=b.split("."),d=a[c[0]],e=1,f=c.length;f>e;e++){if(!(c[e]in d))return!1;d=d[c[e]]}return d}function f(a){return k.dir+"/"+a.split(".").join("/")+".js"}function g(a,b){b=b||"";var c=document.createElement("script");c.className="nervenet "+b,c.innerHTML=a,u?t.insertBefore(c,u):t.appendChild(c)}if(!a.Nervenet){var h=Array.prototype.slice,i=Object.prototype.toString,j={};a.Nervenet={VERSION:"0.1.0",createContext:function(){return new l},createNameSpace:function(b,c){var d=b.split("."),c=c||a;j[b]=c;for(var e=0,f=d.length;f>e;e++)c[d[e]]=c[d[e]]||{},c=c[d[e]];return c},parseNamespace:e,setConfig:function(a,b){a in k&&(k[a]=b)}};var k={dir:"js",injectPrefix:"$"},l=function(){this.mappings={},this.eventMap={},this.valueMap={},this.config=d({},k),this.mapValue("context",this)},m=function(a,b){this.klass=a,this.instance=b},n={NOT_A_CLASS:"[Error Nervenet.context.mapClass] the second parameter is invalid, a class is expected",SOMETHING_EXIST:"[Error Nerver.context.mapClass/mapSingleton/mapValue] the mapping already exist"};l.prototype={createInstance:function(a){var b=h.call(arguments,1);a=c(a)?this.getClass(a):a;var d=Object.create(a.prototype);return a.apply(d,b),this.inject(d),d},getClass:function(a){return this.mappings[a].klass},getSingleton:function(a){if(!(a in this.mappings))throw new Error("no such class");return this.mappings[a].instance||(this.mappings[a].instance=this.createInstance(a)),this.mappings[a].instance},getValue:function(a){return this.valueMap[a]},hasMapping:function(a){return a in this.mappings},hasValue:function(a){return a in this.valueMap},inject:function(a){for(var d in a)if((null===a[d]||c(a[d]))&&0===d.indexOf(this.config.injectPrefix)){var f=d.substr(this.config.injectPrefix.length),g=a[d],h=e(g);if(h){if(!b(h)){this.mapValue(g,h),a[d]=h;continue}var i=!1;for(var f in this.mappings)if(this.getClass(f)===h){this.getSingleton(f)?a[d]=this.getSingleton(f):(a[d]=this.createInstance(f),this.mapSingleton(f,a[d])),i=!0;break}if(!i){a[d]=this.createInstance(h),this.mapSingleton(g,h,a[d]);continue}}f in this.valueMap?a[d]=this.getValue(f):f in this.mappings&&(a[d]=this.getSingleton(f))}return a.postConstruct&&b(a.postConstruct)&&a.postConstruct(),this},mapClass:function(a,c){if(!b(c))throw new Error(n.NOT_A_CLASS);if(this.hasMapping(a))throw new Error(n.SOMETHING_EXIST);return this.mappings[a]=new m(c),this},mapEvent:function(a,b,c){this.eventMap[a]=this.eventMap.event||[],this.eventMap[a].push({command:b,context:c})},mapSingleton:function(a,c,d){if(this.hasMapping(a))throw new Error(n.SOMETHING_EXIST);return d&&(this.mappings[a]=new m(c,d)),this.mappings[a]=b(c)?new m(c):new m(null,c),this},mapValue:function(a,b){if(this.hasValue(a))throw new Error(n.SOMETHING_EXIST);return this.valueMap[a]=b,this},removeMapping:function(a){this.mappings[a]=null,delete this.mappings[a]},removeValue:function(a){this.valueMap[a]=null,delete this.valueMap[a]},start:function(a){w.start(a,this)},trigger:function(a){var b=Array.prototype.slice.call(arguments,1),c=this.eventMap[a];b.push(this);for(var d=0,e=c.length;e>d;d++){var f=c[d];f.command.apply(f.context,b)}}};var o=/(import|extend) ((\w+\.)+(\w+))/gi,p=-1,q=[],r=[],s={},t=document.getElementsByTagName("head")[0]||document.documentElement,u=t.getElementsByTagName("base")[0],v=new XMLHttpRequest;v.onload=function(){q[p].content=this.response,w.parse(this.response),w.loadNext()};var w={createNodes:function(){for(var a=0,b=r.length;b>a;a++){for(var c=0;b>c&&q[c].fullname!==r[a];c++);g(q[c].content,q[c].className),q.splice(c,1)}"func"in s&&s.func.call(s.context)},loadNext:function(){return p++,p>=q.length?(this.createNodes(),void 0):(v.open("get",f(q[p].fullname)),v.send(),void 0)},parse:function(a){b(a)&&(a=a.toString());var c=a.match(o);if(c)for(var d=0,e=c.length;e>d;d++){var f=c[d].slice(7);if(-1===r.indexOf(f)){var g={fullname:f,className:f.slice(f.lastIndexOf(".")+1),type:c[d].substr(0,6),content:""};if(q.push(g),"import"===g.type)r.push(f);else{for(var h=q[p].fullname,i=0;r[i]!==h;)i++;r.splice(i,0,f)}}}},reset:function(){r=[],q=[]},start:function(a,b){this.reset(),s={func:a,context:b},this.parse(a),this.loadNext()}}}}(this);
/*
//@ sourceMappingURL=Nervenet.min.map
*/